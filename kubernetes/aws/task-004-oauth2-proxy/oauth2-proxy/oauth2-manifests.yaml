---
# Source: oauth2-proxy/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: oauth2-oauth2-proxy
  namespace: "default"
  labels:
    app.kubernetes.io/name: oauth2-proxy
    helm.sh/chart: oauth2-proxy-0.1.8
    app.kubernetes.io/instance: oauth2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: oauth2-proxy
---
# Source: oauth2-proxy/templates/secret-authenticated-emails-file.yaml
apiVersion: v1
kind: Secret
metadata:
  name: oauth2-oauth2-proxy-access-list
  namespace: "default"
  labels:
    app.kubernetes.io/name: oauth2-proxy
    helm.sh/chart: oauth2-proxy-0.1.8
    app.kubernetes.io/instance: oauth2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: oauth2-proxy
type: Opaque
data:
  authenticated-emails-list: "YW5raXRzaW5naHJhdGhpMUBnbWFpbC5jb20="
---
# Source: oauth2-proxy/templates/secret-google.yaml
apiVersion: v1
kind: Secret
metadata:
  name: oauth2-oauth2-proxy-google
  namespace: "default"
  labels:
    app.kubernetes.io/name: oauth2-proxy
    helm.sh/chart: oauth2-proxy-0.1.8
    app.kubernetes.io/instance: oauth2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: oauth2-proxy
type: Opaque
data:
  service-account.json: ""
---
# Source: oauth2-proxy/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: oauth2-oauth2-proxy
  namespace: "default"
  labels:
    app.kubernetes.io/name: oauth2-proxy
    helm.sh/chart: oauth2-proxy-0.1.8
    app.kubernetes.io/instance: oauth2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: oauth2-proxy
type: Opaque
data:
  cookie-secret: "WTI5dmEybGxDZ3NrZG5mcw=="
  client-secret: "WEkzZl9ZRXlSdWJmUGtxUFhlVjlCV1Rs"
  client-id: "MTAzOTc1ODgzMDkwLWE5NW8xMzM4ZjBja2swczMyaGVzbjdvNDQxaWNlcDJsLmFwcHMuZ29vZ2xldXNlcmNvbnRlbnQuY29t"
---
# Source: oauth2-proxy/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: oauth2-oauth2-proxy
  namespace: "default"
  labels:
    app.kubernetes.io/name: oauth2-proxy
    helm.sh/chart: oauth2-proxy-0.1.8
    app.kubernetes.io/instance: oauth2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: oauth2-proxy
data:
  oauth2_proxy.cfg: |
    email_domains = [ "*" ]
    # upstreams = [ "file:///dev/null" ]
    http_address="0.0.0.0:4180"
    provider="google"
    cookie_secure="true"
    redirect_url="https://auth.somedomain.com/oauth2/callback"
    cookie_domains=".somedomain.com" # Required so cookie can be read on all subdomains.
    whitelist_domains=".somedomain.com" # Required to allow redirection back to original requested target.
    # Mandatory option when using oauth2-proxy with traefik
    reverse_proxy="true"
    # Required for traefik with ForwardAuth and static upstream configuration
    upstreams="static://202"
    # The following option skip the page requesting the user
    # to click on a button to be redirected to the identity provider
    # It can be activated only when traefik is not configure with
    # the error redirection middleware as this example.
    skip_provider_button="true"
    set_authorization_header="true"
    set_xauthrequest="true"
---
# Source: oauth2-proxy/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: oauth2-oauth2-proxy
  namespace: "default"
  labels:
    app.kubernetes.io/name: oauth2-proxy
    helm.sh/chart: oauth2-proxy-0.1.8
    app.kubernetes.io/instance: oauth2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: oauth2-proxy
spec:
  type: ClusterIP

  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: http
      nodePort: null
  selector:
    app.kubernetes.io/name: oauth2-proxy
    app.kubernetes.io/instance: oauth2
    app.kubernetes.io/component: oauth2-proxy
---
# Source: oauth2-proxy/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oauth2-oauth2-proxy
  namespace: "default"
  labels:
    app.kubernetes.io/name: oauth2-proxy
    helm.sh/chart: oauth2-proxy-0.1.8
    app.kubernetes.io/instance: oauth2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: oauth2-proxy
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: oauth2-proxy
      app.kubernetes.io/instance: oauth2
      app.kubernetes.io/component: oauth2-proxy
  template:
    metadata:
      annotations:
        checksum/config: 6f173c5a75d01f531e82b125307e41c9c9b9923e5ce3b7f048806e7d996bb543
      labels:
        app.kubernetes.io/name: oauth2-proxy
        helm.sh/chart: oauth2-proxy-0.1.8
        app.kubernetes.io/instance: oauth2
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: oauth2-proxy
    spec:
      serviceAccountName: oauth2-oauth2-proxy

      affinity:
        podAffinity:

        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: oauth2-proxy
                    app.kubernetes.io/instance: oauth2
                    app.kubernetes.io/component: oauth2-proxy
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:

      securityContext:
        fsGroup: 1001
      containers:
        - name: oauth2-proxy
          image: docker.io/bitnami/oauth2-proxy:7.1.3-debian-10-r100
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 1001
          args:
            - --http-address=0.0.0.0:4180
            - --config=/bitnami/oauth2-proxy/conf/oauth2_proxy.cfg
            - --authenticated-emails-file=/bitnami/oauth2-proxy/conf/authenticated-emails/authenticated-emails-list
          env:
            - name: OAUTH2_PROXY_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: oauth2-oauth2-proxy
                  key: client-id
            - name: OAUTH2_PROXY_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: oauth2-oauth2-proxy
                  key: client-secret
            - name: OAUTH2_PROXY_COOKIE_SECRET
              valueFrom:
                secretKeyRef:
                  name: oauth2-oauth2-proxy
                  key: cookie-secret
            - name: OAUTH2_PROXY_SESSION_STORE_TYPE
              value: "cookie"
          envFrom:
          ports:
            - containerPort: 4180
              name: http
              protocol: TCP
          resources:
            limits: {}
            requests: {}
          livenessProbe:
            httpGet:
              path: /ping
              port: http
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /ping
              port: http
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
          volumeMounts:
            - name: main-configuration
              mountPath: /bitnami/oauth2-proxy/conf
            - name: authenticated-emails
              mountPath: /bitnami/oauth2-proxy/conf/authenticated-emails
              readOnly: true
      volumes:
        - name: authenticated-emails
          secret:
            items:
            - key: authenticated-emails-list
              path: authenticated-emails-list
            secretName: oauth2-oauth2-proxy-access-list
        - name: main-configuration
          configMap:
            defaultMode: 420
            name: oauth2-oauth2-proxy
---
# Source: oauth2-proxy/templates/ingress-route.yaml
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: oauth2-https
spec:
  entryPoints:
  - web
  - websecure
  routes:
  - kind: Rule
    match: Host(`auth.somedomain.com`) && PathPrefix(`/`)
    priority: 0
    middlewares:
      - name: cors-security-headers
    services:
    - name: oauth-release-oauth2-proxy
      port: 8080
  tls: {}
---
# Source: oauth2-proxy/templates/traefik-middlewares.yaml
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: cors-security-headers
spec:
  headers:
    accessControlAllowCredentials: true
    accessControlAllowMethods:
      - GET
      - OPTIONS
      - HEAD
    accessControlAllowOriginList:
      - '*'
    accessControlMaxAge: 604800
    addVaryHeader: false
    browserXssFilter: true
    contentTypeNosniff: true
    sslRedirect: true
    sslTemporaryRedirect: false
    stsIncludeSubdomains: true
    stsPreload: true
    stsSeconds: 10886400
